{"version":3,"file":"Chip-85e5b3a5.js","sources":["../../src/elements/Chip/Chip.tsx"],"sourcesContent":["import React, { FC, forwardRef, ReactElement, Ref } from 'react';\nimport classNames from 'classnames';\nimport css from './Chip.module.css';\n\nexport interface ChipProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Color variant for the chip.\n   */\n  color?:\n    | 'default'\n    | 'primary'\n    | 'secondary'\n    | 'error'\n    | 'success'\n    | 'warning'\n    | 'info';\n\n  /**\n   * Size variant for the chip.\n   */\n  size?: 'small' | 'medium' | 'large';\n\n  /**\n   * Style variant for the chip.\n   */\n  variant?: 'filled' | 'outline';\n\n  /**\n   * Whether the chip is selected.\n   */\n  selected?: boolean;\n\n  /**\n   * Whether the chip is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Whether to disable the margins.\n   */\n  disableMargins?: boolean;\n\n  /**\n   * Content to display before the chip label.\n   */\n  start?: ReactElement | string;\n\n  /**\n   * Content to display before the chip label.\n   */\n  end?: ReactElement | string;\n}\n\nexport interface ChipRef {\n  ref?: Ref<HTMLDivElement>;\n}\n\nexport const Chip: FC<ChipProps & ChipRef> = forwardRef(\n  (\n    {\n      children,\n      color,\n      variant,\n      size,\n      selected,\n      disabled,\n      className,\n      disableMargins,\n      start,\n      end,\n      onClick,\n      ...rest\n    },\n    ref: Ref<HTMLDivElement>\n  ) => (\n    <div\n      {...rest}\n      ref={ref}\n      tabIndex={onClick ? 0 : -1}\n      onClick={onClick}\n      className={classNames(\n        css.chip,\n        {\n          [css[color]]: true,\n          [css[variant]]: true,\n          [css[size]]: true,\n          [css.selected]: !!selected,\n          [css.disabled]: disabled,\n          [css.selectable]: onClick && !disabled,\n          [css.disableMargins]: disableMargins\n        },\n        className\n      )}\n    >\n      {start && <div className={css.startAdornment}>{start}</div>}\n      <div className={css.content}>{children}</div>\n      {end && <div className={css.endAdornment}>{end}</div>}\n    </div>\n  )\n);\n\nChip.defaultProps = {\n  color: 'default',\n  size: 'medium',\n  variant: 'filled'\n};\n"],"names":["Chip","forwardRef","children","color","variant","size","selected","disabled","className","disableMargins","start","end","onClick","rest","ref","jsxs","classNames","css","jsx"],"mappings":"iuBAyDOA,EAAAC,EAAA,WAAsC,CAAA,CAEzC,SAAAC,EACE,MAAAC,EACA,QAAAC,EACA,KAAAC,EACA,SAAAC,EACA,SAAAC,EACA,UAAAC,EACA,eAAAC,EACA,MAAAC,EACA,IAAAC,EACA,QAAAC,EACA,GAAAC,CACG,EAAAC,IAAAC,EAAA,KAIL,MAAC,CAAA,GAAAF,EACK,IAAAC,EACJ,SAAAF,EAAA,EAAA,GACwB,QAAAA,EACxB,UAAAI,EACWC,EAAA,KACL,CACJ,CAAAA,EAAAd,CAAA,CAAA,EAAA,GACgB,CAAAc,EAAAb,CAAA,CAAA,EAAA,GACE,CAAAa,EAAAZ,CAAA,CAAA,EAAA,GACH,CAAAY,EAAA,QAAA,EAAA,CAAA,CAAAX,EACK,CAAAW,EAAA,QAAA,EAAAV,EACF,CAAAU,EAAA,UAAA,EAAAL,GAAA,CAAAL,EACc,CAAAU,EAAA,cAAA,EAAAR,CACR,EACxBD,CACA,EACF,SAAA,CAECE,GAAAQ,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,eAAA,SAAAP,EAAA,EAAoDQ,EAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,QAAA,SAAAf,EAAA,EACdS,GAAAO,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,aAAA,SAAAN,EAAA,CACQ,CAAA,CAAA,CAGrD,EAEAX,EAAA,aAAA,CAAoB,MAAA,UACX,KAAA,SACD,QAAA,QAER"}