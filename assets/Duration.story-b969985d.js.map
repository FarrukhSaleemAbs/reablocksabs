{"version":3,"file":"Duration.story-b969985d.js","sources":["../../src/data/Duration/utils.ts","../../src/data/Duration/Duration.tsx"],"sourcesContent":["import humanFormat from 'human-format';\nimport pluralize from 'pluralize';\n\nexport type DurationFormatTypes = number | string | null | undefined;\n\nconst timeScale = new humanFormat.Scale({\n  ms: 1,\n  s: 1 * 1000,\n  min: 60 * 1000,\n  hr: 3600 * 1000,\n  day: 86400 * 1000,\n  month: 2592000 * 1000\n});\n\nexport function formatDuration(time: DurationFormatTypes, emptyValue = 'N/A') {\n  let newTime = time;\n\n  // Try and tease out the different formats users might pass\n  if (typeof time === 'string') {\n    newTime = parseFloat(time as string);\n  } else if (time === null || time === undefined) {\n    return [emptyValue];\n  }\n\n  // Let's get the format and tease out the different values\n  const humanized = humanFormat(newTime as number, { scale: timeScale });\n  const [valueStr, unitStr] = humanized.split(' ');\n\n  const value = parseFloat(valueStr);\n  if (value === 1) {\n    return humanized;\n  }\n\n  if (\n    unitStr === null ||\n    unitStr === undefined ||\n    value === null ||\n    value === undefined\n  ) {\n    return [emptyValue];\n  }\n\n  return `${value} ${pluralize(unitStr, value)}`;\n}\n","import React, { FC } from 'react';\nimport { formatDuration, DurationFormatTypes } from './utils';\n\nexport interface DurationProps {\n  /**\n   * Size to pass to the formatter.\n   */\n  value: DurationFormatTypes;\n\n  /**\n   * If the value is undefined/null it will return this value.\n   */\n  emptyValue?: string;\n}\n\nexport const Duration: FC<DurationProps> = ({ value, emptyValue }) => (\n  <>{formatDuration(value, emptyValue)}</>\n);\n\nDuration.defaultProps = {\n  emptyValue: 'N/A'\n};\n"],"names":["timeScale","humanFormat","formatDuration","time","emptyValue","newTime","humanized","valueStr","unitStr","value","pluralize","Duration","jsx","Fragment"],"mappings":"0KAKA,MAAMA,EAAY,IAAIC,EAAY,MAAM,CACtC,GAAI,EACJ,EAAG,EAAI,IACP,IAAK,GAAK,IACV,GAAI,KAAO,IACX,IAAK,MAAQ,IACb,MAAO,OAAU,GACnB,CAAC,EAEe,SAAAC,EAAeC,EAA2BC,EAAa,MAAO,CAC5E,IAAIC,EAAUF,EAGV,GAAA,OAAOA,GAAS,SAClBE,EAAU,WAAWF,CAAc,UAC1BA,GAAS,KAClB,MAAO,CAACC,CAAU,EAIpB,MAAME,EAAYL,EAAYI,EAAmB,CAAE,MAAOL,EAAW,EAC/D,CAACO,EAAUC,CAAO,EAAIF,EAAU,MAAM,GAAG,EAEzCG,EAAQ,WAAWF,CAAQ,EACjC,OAAIE,IAAU,EACLH,EAIPE,GAAY,MAEZC,IAAU,MACVA,IAAU,OAEH,CAACL,CAAU,EAGb,GAAGK,CAAK,IAAIC,EAAUF,EAASC,CAAK,CAAC,EAC9C,CC5BO,MAAAE,EAAA,CAAA,CAAA,MAAAF,EAAA,WAAAL,CAAA,IAAAQ,EAAA,IAAAC,WAAA,CAAA,SAAAX,EAAAO,EAAAL,CAAA,CAAA,CAAA,EAIPO,EAAA,aAAA,CAAwB,WAAA,KAExB;;;;;;;;;;;;;;;;;"}