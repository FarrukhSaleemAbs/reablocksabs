{"version":3,"file":"InfinityList-ef38c2f8.js","sources":["../../src/data/InfinityList/useInfinityList.ts","../../src/data/InfinityList/InfinityList.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\n\nexport interface InfinityListInputs {\n  /**\n   * The array of items to page on.\n   */\n  items: any[];\n\n  /**\n   * The page size. Combined with the threshold, this will determine the page size.\n   */\n  size?: number;\n\n  /**\n   * The fuzzy threshold to use when calculating the next page size.\n   */\n  threshold?: number;\n\n  /**\n   * The numer of items to show in the next page. If undefined, will use the size.\n   * If you want to show all items, pass infinity.\n   */\n  nextSize?: number;\n}\n\nexport const useInfinityList = ({\n  items,\n  threshold = 3,\n  size = 10,\n  nextSize\n}: InfinityListInputs) => {\n  const [index, setIndex] = useState<number>(0);\n  const data = useMemo(() => [...items].slice(0, index), [index, items]);\n  const hasMore = index < items.length;\n  const remaining = items.length - index;\n\n  const showNext = useCallback(\n    (amount?: number) => {\n      if (hasMore) {\n        const nextAmount =\n          nextSize === Infinity ? remaining : nextSize || amount || size;\n        const newIndex = Math.min(items.length, index + nextAmount);\n        setIndex(newIndex);\n      }\n    },\n    [hasMore, index, size, items, remaining, nextSize]\n  );\n\n  useEffect(() => {\n    const len = items?.length || 0;\n    const endIdx =\n      len <= size + threshold ? size + threshold : Math.min(len, size);\n\n    setIndex(endIdx);\n  }, [items.length, size, threshold]);\n\n  return {\n    data,\n    hasMore,\n    remaining,\n    showNext\n  };\n};\n","import React, { FC, Children, Fragment } from 'react';\nimport { useInfinityList, InfinityListInputs } from './useInfinityList';\n\nexport interface InfinityListProps extends Omit<InfinityListInputs, 'items'> {\n  /**\n   * The children to filter.\n   */\n  children: any;\n\n  /**\n   * CSS Classname to apply to the button.\n   */\n  buttonClassName?: string;\n}\n\nexport const InfinityList: FC<InfinityListProps> = ({\n  children,\n  size,\n  threshold,\n  nextSize,\n  buttonClassName\n}) => {\n  const arr = Children.toArray(children);\n  const { data, hasMore, remaining, showNext } = useInfinityList({\n    items: arr,\n    size,\n    threshold,\n    nextSize\n  });\n\n  return (\n    <>\n      {data.map((child, i) => (\n        <Fragment key={i}>{child}</Fragment>\n      ))}\n      {hasMore && (\n        <button\n          className={buttonClassName}\n          onClick={event => {\n            event.stopPropagation();\n            showNext();\n          }}\n        >\n          Show {Math.min(size, remaining)} more\n        </button>\n      )}\n    </>\n  );\n};\n\nInfinityList.defaultProps = {\n  size: 10,\n  threshold: 3\n};\n"],"names":["useInfinityList","items","threshold","size","nextSize","index","setIndex","useState","data","useMemo","hasMore","remaining","showNext","useCallback","amount","nextAmount","newIndex","useEffect","len","endIdx","InfinityList","children","buttonClassName","arr","Children","jsxs","Fragment","child","i","jsx","Fragment2","event"],"mappings":"sFAyBO,MAAMA,EAAkB,CAAC,CAC9B,MAAAC,EACA,UAAAC,EAAY,EACZ,KAAAC,EAAO,GACP,SAAAC,CACF,IAA0B,CACxB,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAiB,CAAC,EACtCC,EAAOC,EAAA,QAAQ,IAAM,CAAC,GAAGR,CAAK,EAAE,MAAM,EAAGI,CAAK,EAAG,CAACA,EAAOJ,CAAK,CAAC,EAC/DS,EAAUL,EAAQJ,EAAM,OACxBU,EAAYV,EAAM,OAASI,EAE3BO,EAAWC,EAAA,YACdC,GAAoB,CACnB,GAAIJ,EAAS,CACX,MAAMK,EACJX,IAAa,IAAWO,EAAYP,GAAYU,GAAUX,EACtDa,EAAW,KAAK,IAAIf,EAAM,OAAQI,EAAQU,CAAU,EAC1DT,EAASU,CAAQ,CACnB,CACF,EACA,CAACN,EAASL,EAAOF,EAAMF,EAAOU,EAAWP,CAAQ,CAAA,EAGnDa,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,GAAMjB,GAAA,YAAAA,EAAO,SAAU,EACvBkB,EACJD,GAAOf,EAAOD,EAAYC,EAAOD,EAAY,KAAK,IAAIgB,EAAKf,CAAI,EAEjEG,EAASa,CAAM,GACd,CAAClB,EAAM,OAAQE,EAAMD,CAAS,CAAC,EAE3B,CACL,KAAAM,EACA,QAAAE,EACA,UAAAC,EACA,SAAAC,CAAA,CAEJ,EC/COQ,EAAA,CAAA,CAA6C,SAAAC,EAClD,KAAAlB,EACA,UAAAD,EACA,SAAAE,EACA,gBAAAkB,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAAA,SAAA,QAAAH,CAAA,EACA,CAAA,KAAAb,EAAA,QAAAE,EAAA,UAAAC,EAAA,SAAAC,CAAA,EAAAZ,EAAA,CAA+D,MAAAuB,EACtD,KAAApB,EACP,UAAAD,EACA,SAAAE,CACA,CAAA,EAGF,OAAAqB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEKlB,EAAA,IAAA,CAAAmB,EAAAC,IAAAC,EAAAA,IAAAC,EAAA,SAAA,CAAA,SAAAH,CAAA,EAAAC,CAAA,CAAA,EAEAlB,GAAAe,EAAA,KAEC,SAAC,CAAA,UAAAH,EACY,QAAAS,GAAA,CAETA,EAAA,gBAAA,EACAnB,GAAS,EACX,SAAA,CACD,QAAA,KAAA,IAAAT,EAAAQ,CAAA,EAC+B,OAAE,CAAA,CAAA,CAClC,CAAA,CAAA,CAIR,EAEAS,EAAA,aAAA,CAA4B,KAAA,GACpB,UAAA,CAER;"}