import{j as r}from"./jsx-runtime-9c4ae004.js";import{r as e}from"./index-1b03fe98.js";import{c as I}from"./index-91038615.js";import{F as L}from"./focus-trap-react-b3e8c062.js";import{u as D,C as H}from"./rdk-b7736295.js";import{a as F}from"./motion-a93435c4.js";const W="_container_gicoy_1",A="_inner_gicoy_7",j={container:W,inner:A},x=e.forwardRef(({reference:s,children:t,style:i,className:n,placement:c,closeOnEscape:v,open:m,appendToBody:V,closeOnBodyClick:p,maxHeight:h,autofocus:S,modifiers:l,autoWidth:O,minWidth:b,maxWidth:o,onClose:C,onMouseEnter:f,onMouseLeave:_},k)=>{const g=D(),y=e.useMemo(()=>{if(O){const u={enabled:!0,order:840,fn:d=>{var N;const{width:T,left:E,right:R}=d.offsets.reference,M=(N=l==null?void 0:l.offset)==null?void 0:N.offset;let q=0,a=T;if(o&&a>o?a=o:b&&a<b&&(a=b),M)if(typeof M=="number")q=M;else{const[B]=M.split(",");q=parseInt(B.trim(),10)}return d.styles.width=a,d.offsets.popper.width=a,d.offsets.popper.left=E+q,d.offsets.popper.right=R+q,d}};return l?{...l,sameWidth:u}:{sameWidth:u}}return l},[l,O,b,o]);return r.jsx(H,{open:m,closeOnBodyClick:p,appendToBody:V,reference:s,placement:c,modifiers:y,closeOnEscape:v,content:()=>r.jsx(F.div,{ref:k,initial:{opacity:0,y:-10},animate:{opacity:1,y:0},exit:{opacity:0,y:-10},className:I(j.container,n),style:i,onMouseEnter:f,onMouseLeave:_,children:S?r.jsx(L,{focusTrapOptions:{escapeDeactivates:!0,clickOutsideDeactivates:!0,fallbackFocus:`#${g}`},children:r.jsx("div",{id:g,className:j.inner,tabIndex:-1,style:{maxHeight:h},children:typeof t=="function"?t():t})}):r.jsx("div",{className:j.inner,style:{maxHeight:h},children:typeof t=="function"?t():t})}),onClose:C})});x.defaultProps={placement:"bottom-start",closeOnEscape:!0,open:!1,appendToBody:!0,closeOnBodyClick:!0,maxHeight:"max-height: calc(100vh - 48px)",autofocus:!0};try{x.displayName="Menu",x.__docgenInfo={description:"",displayName:"Menu",props:{appendToBody:{defaultValue:{value:"true"},description:"Whether to append the menu to the body or not.",name:"appendToBody",required:!1,type:{name:"boolean"}},autofocus:{defaultValue:{value:"true"},description:"Autofocus the menu on open or not.",name:"autofocus",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The menu contents.",name:"children",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"CSS class applied to menu element.",name:"className",required:!1,type:{name:"string"}},closeOnBodyClick:{defaultValue:{value:"true"},description:"Close the menu on click or not.",name:"closeOnBodyClick",required:!1,type:{name:"boolean"}},closeOnEscape:{defaultValue:{value:"true"},description:"Close the menu on escape.",name:"closeOnEscape",required:!1,type:{name:"boolean"}},placement:{defaultValue:{value:"bottom-start"},description:"Popper placement type.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'}]}},reference:{defaultValue:null,description:"Reference element for the menu position.",name:"reference",required:!1,type:{name:"any"}},style:{defaultValue:null,description:"CSS Properties for the menu.",name:"style",required:!1,type:{name:"CSSProperties"}},open:{defaultValue:{value:"false"},description:"Whether to show the menu or not.",name:"open",required:!1,type:{name:"boolean"}},maxHeight:{defaultValue:{value:"max-height: calc(100vh - 48px)"},description:"Max height of the menu.",name:"maxHeight",required:!1,type:{name:"string"}},modifiers:{defaultValue:null,description:"Popper.js Position modifiers.",name:"modifiers",required:!1,type:{name:"Modifiers"}},autoWidth:{defaultValue:null,description:"Whether the menu should be the same width as the reference element",name:"autoWidth",required:!1,type:{name:"boolean"}},minWidth:{defaultValue:null,description:"Min width of the menu.",name:"minWidth",required:!1,type:{name:"number"}},maxWidth:{defaultValue:null,description:"Max width of the menu.",name:"maxWidth",required:!1,type:{name:"number"}},onClose:{defaultValue:null,description:"Menu was closed.",name:"onClose",required:!1,type:{name:"(event: OverlayEvent) => void"}},onMouseEnter:{defaultValue:null,description:"Mouse enter event.",name:"onMouseEnter",required:!1,type:{name:"(event: any) => void"}},onMouseLeave:{defaultValue:null,description:"Mouse leave event.",name:"onMouseLeave",required:!1,type:{name:"(event: any) => void"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const P=s=>{const{open:t,onClose:i}=s||{},[n,c]=e.useState(t),v=e.useRef(null);e.useEffect(()=>{c(t)},[t]);const m=e.useCallback(()=>{c(!1),i==null||i()},[i]),V=e.useCallback(()=>{c(!n)},[n]),p=e.useCallback(h=>r.jsx(x,{...h,open:n,reference:v,onClose:m}),[n,m]);return{isOpen:n,setOpen:c,toggleOpen:V,Menu:p,ref:v}};try{P.displayName="useMenu",P.__docgenInfo={description:"",displayName:"useMenu",props:{open:{defaultValue:null,description:"",name:"open",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"() => void"}}}}}catch{}const w=({label:s,children:t,style:i,placement:n,menuClassName:c,menuStyle:v,enterDelay:m,autofocus:V,leaveDelay:p,className:h,maxHeight:S,activeClassName:l,closeOnBodyClick:O,closeOnEscape:b,onClose:o})=>{const[C,f]=e.useState(!1),_=e.useRef(null),k=e.useRef(null),g=e.useRef(!1),y=e.useRef(null),u=e.useRef(null),d=e.useCallback(()=>{clearTimeout(y.current),clearTimeout(u.current),y.current=setTimeout(()=>f(!0),m)},[m]),T=e.useCallback(()=>{clearTimeout(y.current),clearTimeout(u.current),f(!C)},[C]),E=e.useCallback(()=>{u.current=setTimeout(()=>{g.current||f(!1)},p)},[p]),R=e.useCallback(a=>{clearTimeout(y.current),clearTimeout(u.current),g.current=!0},[]),M=e.useCallback(a=>{clearTimeout(y.current),clearTimeout(u.current),g.current=!1,u.current=setTimeout(()=>{var N;(N=_.current)!=null&&N.contains(a.target)||f(!1)},p)},[p]),q=e.useCallback(a=>{f(!1),o==null||o(a)},[o]);return r.jsxs(e.Fragment,{children:[r.jsx("div",{className:I(h,{[l]:C}),style:i,ref:_,onClick:T,onMouseEnter:d,onMouseLeave:E,children:s}),r.jsx(x,{className:c,autofocus:V,style:v,reference:_,closeOnBodyClick:O,closeOnEscape:b,open:C,placement:n,maxHeight:S,ref:k,onMouseEnter:R,onMouseLeave:M,onClose:q,children:t})]})};w.defaultProps={autofocus:!0,placement:"right-start",closeOnEscape:!0,closeOnBodyClick:!0,enterDelay:0,leaveDelay:100};try{w.displayName="NestedMenu",w.__docgenInfo={description:"",displayName:"NestedMenu",props:{children:{defaultValue:null,description:"Menu contents.",name:"children",required:!0,type:{name:"any"}},label:{defaultValue:null,description:"Label element for the menu item.",name:"label",required:!0,type:{name:"any"}},placement:{defaultValue:{value:"right-start"},description:"Popper placement type.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'}]}},className:{defaultValue:null,description:"CSS class applied to label element.",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"CSS Properties for the label element.",name:"style",required:!1,type:{name:"CSSProperties"}},menuClassName:{defaultValue:null,description:"CSS class applied to label element.",name:"menuClassName",required:!1,type:{name:"string"}},activeClassName:{defaultValue:null,description:"CSS class applied to label element when active.",name:"activeClassName",required:!1,type:{name:"string"}},menuStyle:{defaultValue:null,description:"CSS Properties for the label element.",name:"menuStyle",required:!1,type:{name:"CSSProperties"}},enterDelay:{defaultValue:{value:"0"},description:"Delay before showing tooltip.",name:"enterDelay",required:!1,type:{name:"number"}},leaveDelay:{defaultValue:{value:"100"},description:"Delay before closing tooltip.",name:"leaveDelay",required:!1,type:{name:"number"}},closeOnBodyClick:{defaultValue:{value:"true"},description:"Close the menu on click or not.",name:"closeOnBodyClick",required:!1,type:{name:"boolean"}},closeOnEscape:{defaultValue:{value:"true"},description:"Close the menu on escape.",name:"closeOnEscape",required:!1,type:{name:"boolean"}},maxHeight:{defaultValue:null,description:"Max height of the menu.",name:"maxHeight",required:!1,type:{name:"string"}},autofocus:{defaultValue:{value:"true"},description:"Autofocus the menu on open or not.",name:"autofocus",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Nested Menu was closed.",name:"onClose",required:!1,type:{name:"(event: OverlayEvent) => void"}}}}}catch{}export{x as M,w as N,P as u};
//# sourceMappingURL=NestedMenu-a45dfd89.js.map
