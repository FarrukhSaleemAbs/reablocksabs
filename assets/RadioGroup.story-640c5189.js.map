{"version":3,"file":"RadioGroup.story-640c5189.js","sources":["../../src/form/Radio/RadioGroup.tsx"],"sourcesContent":["import React, { Children, FC, useCallback, useMemo, useState } from 'react';\nimport { RadioGroupContext, RadioGroupContextProps } from './RadioGroupContext';\nimport { Stack } from '../../layout';\n\nexport interface RadioGroupProps extends RadioGroupContextProps {\n  /**\n   * The Radio Buttons to display in the group.\n   */\n  children: any;\n\n  /**\n   * Additional CSS classes to apply to the Radio group\n   */\n  className?: string;\n}\n\nexport const RadioGroup: FC<RadioGroupProps> = ({\n  children,\n  className,\n  onChange,\n  selectedValue: defaultValue\n}) => {\n  const [selectedValue, setSelectedValue] = useState<any>(defaultValue);\n\n  const handleValueChange = useCallback(\n    value => {\n      setSelectedValue(value);\n      onChange(value);\n    },\n    [onChange]\n  );\n\n  const values: RadioGroupContextProps = useMemo(\n    () => ({\n      onChange: handleValueChange,\n      selectedValue: selectedValue\n    }),\n    [handleValueChange, selectedValue]\n  );\n\n  return (\n    <RadioGroupContext.Provider value={values}>\n      {children}\n    </RadioGroupContext.Provider>\n  );\n};\n"],"names":["RadioGroup","children","className","onChange","defaultValue","selectedValue","setSelectedValue","useState","handleValueChange","useCallback","value","values","useMemo","jsx","RadioGroupContext"],"mappings":"qIAgBO,MAAAA,EAAA,CAAA,CAAyC,SAAAC,EAC9C,UAAAC,EACA,SAAAC,EACA,cAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAH,CAAA,EAEAI,EAAAC,EAAA,YAA0BC,GAAA,CAEtBJ,EAAAI,CAAA,EACAP,EAAAO,CAAA,CAAc,EAChB,CAAAP,CAAA,CACS,EAGXQ,EAAAC,EAAA,QAAuC,KAAA,CAC9B,SAAAJ,EACK,cAAAH,CACV,GACF,CAAAG,EAAAH,CAAA,CACiC,EAGnC,OAAAQ,EAAAA,IAAAC,EAAA,SAAA,CAAA,MAAAH,EAAA,SAAAV,CAAA,CAAA,CAKF;;;;;;;;;;;;;;;;;;"}