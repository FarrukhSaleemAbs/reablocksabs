import{j as e}from"./jsx-runtime-9c4ae004.js";import{r as t}from"./index-1b03fe98.js";import{c as b}from"./index-91038615.js";import{A as f}from"./Arrow-0a9a46d3.js";import{a as C}from"./Button-de41aa90.js";import"./ButtonGroup-fb133ea9.js";import{C as j}from"./Collapse-ed6650c8.js";const x=t.createContext({collapsedIcon:null,expandedIcon:null}),q="_container_1masa_1",V="_tree_1masa_8",g="_arrow_1masa_13",i={container:q,tree:V,arrow:g},h=({children:a,className:u,expandedIcon:d=e.jsx(f,{direction:"down",className:i.arrow}),collapsedIcon:l=e.jsx(f,{direction:"right",className:i.arrow}),...o})=>{const n=t.useMemo(()=>({expandedIcon:d,collapsedIcon:l}),[l,d]);return e.jsx(x.Provider,{value:n,children:e.jsx("div",{className:b(i.tree,u),...o,children:e.jsx("ul",{className:i.container,children:a})})})};try{h.displayName="Tree",h.__docgenInfo={description:"",displayName:"Tree",props:{className:{defaultValue:null,description:"CSS Classname to apply to the tree",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Extra style attributes to apply to the tree",name:"style",required:!1,type:{name:"CSSProperties"}},children:{defaultValue:null,description:"Children to render inside the tree",name:"children",required:!1,type:{name:"any"}},collapsedIcon:{defaultValue:{value:'<Arrow direction="right" className={css.arrow} />'},description:"A custom icon to be used for collapsed nodes.",name:"collapsedIcon",required:!1,type:{name:"any"}},expandedIcon:{defaultValue:{value:'<Arrow direction="down" className={css.arrow} />'},description:"A custom icon to be used for expanded nodes.",name:"expandedIcon",required:!1,type:{name:"any"}}}}}catch{}const I="_node_1solv_1",S="_collapsed_1solv_6",T="_leaf_1solv_10",k="_label_1solv_11",A="_disabled_1solv_16",B="_button_1solv_18",E="_icon_1solv_32",R="_subtree_1solv_43",W="_nodeBlock_1solv_60",s={node:I,collapsed:S,leaf:T,label:k,disabled:A,button:B,icon:E,subtree:R,nodeBlock:W},y=({children:a,className:u,label:d,disabled:l,expanded:o,onExpand:n,onCollapse:c})=>{const{expandedIcon:N,collapsedIcon:v}=t.useContext(x),[r,m]=t.useState(o),p=a&&t.Children.count(a)>0;t.useEffect(()=>{m(o)},[o]);const w=t.useCallback(()=>{const _=!r;m(_),_?n==null||n():c==null||c()},[r,c,n]);return e.jsxs("li",{className:b(u,s.node,{[s.leaf]:!p,[s.disabled]:l}),children:[e.jsxs("div",{className:s.nodeBlock,children:[p&&e.jsx(C,{size:"small",disabled:l,variant:"text",title:r?"Collapse":"Expand",className:s.button,onClick:w,children:r?N:v}),e.jsx("span",{className:s.label,children:d})]}),p&&e.jsx(j,{expanded:r,children:()=>e.jsx("ul",{className:s.subtree,children:a})})]})};try{y.displayName="TreeNode",y.__docgenInfo={description:"",displayName:"TreeNode",props:{label:{defaultValue:null,description:"Label to display for the node",name:"label",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"CSS Classname to apply to the node",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"Children to render inside the node",name:"children",required:!1,type:{name:"any"}},expanded:{defaultValue:null,description:"Whether the node is expanded or not",name:"expanded",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the node is disabled or not",name:"disabled",required:!1,type:{name:"boolean"}},onExpand:{defaultValue:null,description:"Event fired when the node is expanded",name:"onExpand",required:!1,type:{name:"() => void"}},onCollapse:{defaultValue:null,description:"Event fired when the node is collapsed",name:"onCollapse",required:!1,type:{name:"() => void"}}}}}catch{}export{h as T,y as a};
//# sourceMappingURL=TreeNode-ae397e1a.js.map
