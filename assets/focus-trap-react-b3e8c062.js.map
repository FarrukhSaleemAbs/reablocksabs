{"version":3,"file":"focus-trap-react-b3e8c062.js","sources":["../../node_modules/tabbable/dist/index.esm.js","../../node_modules/focus-trap/dist/focus-trap.esm.js","../../node_modules/focus-trap-react/dist/focus-trap-react.js"],"sourcesContent":["/*!\n* tabbable 5.3.3\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]:not(slot)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  return element.getRootNode();\n} : function (element) {\n  return element.ownerDocument;\n};\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\n\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidatesScope\n * @property {Element} scope contains inner candidates\n * @property {Element[]} candidates\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidatesScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidatesScope>}\n */\n\n\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scope: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      } // iterate over shadow content if possible\n\n\n      var shadowRoot = element.shadowRoot || // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n      var validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scope: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n\n  return candidates;\n};\n\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\n\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\n\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\n\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n\n  var radioScope = node.form || getRootNode(node);\n\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n\n  var radioSet;\n\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      width = _node$getBoundingClie.width,\n      height = _node$getBoundingClie.height;\n\n  return width === 0 && height === 0;\n};\n\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n      getShadowRoot = _ref.getShadowRoot;\n\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  } // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n\n\n  var nodeRootHost = getRootNode(node).host;\n  var nodeIsAttached = (nodeRootHost === null || nodeRootHost === void 0 ? void 0 : nodeRootHost.ownerDocument.contains(nodeRootHost)) || node.ownerDocument.contains(node);\n\n  if (!displayCheck || displayCheck === 'full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    } // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n\n    if (nodeIsAttached) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    } // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  } // visible, as far as we can tell, or per current `displayCheck` mode\n\n\n  return false;\n}; // form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\n\n\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement; // check if `node` is contained in a disabled <fieldset>\n\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i); // when the first <legend> (in document order) is found\n\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        } // the disabled <fieldset> containing `node` has no <legend>\n\n\n        return true;\n      }\n\n      parentNode = parentNode.parentElement;\n    }\n  } // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n\n\n  return false;\n};\n\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options) || // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  } // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n\n\n  return false;\n};\n/**\n * @param {Array.<Element|CandidatesScope>} candidates\n * @returns Element[]\n */\n\n\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scope;\n    var element = isScope ? item.scope : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\n\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n\n  return sortByOrder(candidates);\n};\n\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n\n  return candidates;\n};\n\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\n\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 6.9.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, focusable, isTabbable, isFocusable } from 'tabbable';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\n\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n}; // Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\n\n\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n  return idx;\n};\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\n\n\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\n\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true\n  }, userOptions);\n\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n\n\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n          tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n\n\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n\n      optionValue = optionValue.apply(void 0, params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n\n    return node;\n  };\n\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus'); // false explicitly indicates we want no initialFocus at all\n\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode; // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  };\n\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions); // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    }); // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  }; // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(target, config.tabbableOptions)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    } // otherwise, prevent the click\n\n\n    e.preventDefault();\n  }; // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0; // In Firefox when you Tab out of an iframe the Document is briefly focused.\n\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  }; // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  var checkTab = function checkTab(e) {\n    var target = getActualTarget(e);\n    updateTabbableNodes();\n    var destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    } // else, let the browser take care of [shift+]tab and move the focus\n\n  };\n\n  var checkKey = function checkKey(e) {\n    if (isEscapeEvent(e) && valueOrHandler(config.escapeDeactivates, e) !== false) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }; //\n  // EVENT LISTENERS\n  //\n\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    } // There can be only one listening focus trap at a time\n\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }; //\n  // TRAP DEFINITION\n  //\n\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n\n        addListeners();\n\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    }\n  }; // initialize container elements\n\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar PropTypes = require('prop-types');\n\nvar _require = require('focus-trap'),\n    createFocusTrap = _require.createFocusTrap;\n\nvar _require2 = require('tabbable'),\n    isFocusable = _require2.isFocusable; // TODO: These issues are related to older React features which we'll likely need\n//  to fix in order to move the code forward to the next major version of React.\n//  @see https://github.com/davidtheclark/focus-trap-react/issues/77\n\n/* eslint-disable react/no-find-dom-node */\n\n\nvar FocusTrap = /*#__PURE__*/function (_React$Component) {\n  _inherits(FocusTrap, _React$Component);\n\n  var _super = _createSuper(FocusTrap);\n\n  function FocusTrap(props) {\n    var _this;\n\n    _classCallCheck(this, FocusTrap);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getNodeForOption\", function (optionName) {\n      var _this$internalOptions;\n\n      // use internal options first, falling back to original options\n      var optionValue = (_this$internalOptions = this.internalOptions[optionName]) !== null && _this$internalOptions !== void 0 ? _this$internalOptions : this.originalOptions[optionName];\n\n      if (typeof optionValue === 'function') {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n\n        optionValue = optionValue.apply(void 0, params);\n      }\n\n      if (optionValue === true) {\n        optionValue = undefined; // use default value\n      }\n\n      if (!optionValue) {\n        if (optionValue === undefined || optionValue === false) {\n          return optionValue;\n        } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n        throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n      }\n\n      var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n      if (typeof optionValue === 'string') {\n        var _this$getDocument;\n\n        node = (_this$getDocument = this.getDocument()) === null || _this$getDocument === void 0 ? void 0 : _this$getDocument.querySelector(optionValue); // resolve to node, or null if fails\n\n        if (!node) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n      }\n\n      return node;\n    });\n\n    _this.handleDeactivate = _this.handleDeactivate.bind(_assertThisInitialized(_this));\n    _this.handlePostDeactivate = _this.handlePostDeactivate.bind(_assertThisInitialized(_this));\n    _this.handleClickOutsideDeactivates = _this.handleClickOutsideDeactivates.bind(_assertThisInitialized(_this)); // focus-trap options used internally when creating the trap\n\n    _this.internalOptions = {\n      // We need to hijack the returnFocusOnDeactivate option,\n      // because React can move focus into the element before we arrived at\n      // this lifecycle hook (e.g. with autoFocus inputs). So the component\n      // captures the previouslyFocusedElement in componentWillMount,\n      // then (optionally) returns focus to it in componentWillUnmount.\n      returnFocusOnDeactivate: false,\n      // the rest of these are also related to deactivation of the trap, and we\n      //  need to use them and control them as well\n      checkCanReturnFocus: null,\n      onDeactivate: _this.handleDeactivate,\n      onPostDeactivate: _this.handlePostDeactivate,\n      // we need to special-case this setting as well so that we can know if we should\n      //  NOT return focus if the trap gets auto-deactivated as the result of an\n      //  outside click (otherwise, we'll always think we should return focus because\n      //  of how we manage that flag internally here)\n      clickOutsideDeactivates: _this.handleClickOutsideDeactivates\n    }; // original options provided by the consumer\n\n    _this.originalOptions = {\n      // because of the above `internalOptions`, we maintain our own flag for\n      //  this option, and default it to `true` because that's focus-trap's default\n      returnFocusOnDeactivate: true,\n      // because of the above `internalOptions`, we keep these separate since\n      //  they're part of the deactivation process which we configure (internally) to\n      //  be shared between focus-trap and focus-trap-react\n      onDeactivate: null,\n      onPostDeactivate: null,\n      checkCanReturnFocus: null,\n      // the user's setting, defaulted to false since focus-trap defaults this to false\n      clickOutsideDeactivates: false\n    };\n    var focusTrapOptions = props.focusTrapOptions;\n\n    for (var optionName in focusTrapOptions) {\n      if (!Object.prototype.hasOwnProperty.call(focusTrapOptions, optionName)) {\n        continue;\n      }\n\n      if (optionName === 'returnFocusOnDeactivate' || optionName === 'onDeactivate' || optionName === 'onPostDeactivate' || optionName === 'checkCanReturnFocus' || optionName === 'clickOutsideDeactivates') {\n        _this.originalOptions[optionName] = focusTrapOptions[optionName];\n        continue; // exclude from internalOptions\n      }\n\n      _this.internalOptions[optionName] = focusTrapOptions[optionName];\n    } // if set, `{ target: Node, allowDeactivation: boolean }` where `target` is the outside\n    //  node that was clicked, and `allowDeactivation` is the result of the consumer's\n    //  option (stored in `this.originalOptions.clickOutsideDeactivates`, which may be a\n    //  function) whether to allow or deny auto-deactivation on click on this outside node\n\n\n    _this.outsideClick = null; // elements from which to create the focus trap on mount; if a child is used\n    //  instead of the `containerElements` prop, we'll get the child's related\n    //  element when the trap renders and then is declared 'mounted'\n\n    _this.focusTrapElements = props.containerElements || []; // now we remember what the currently focused element is, not relying on focus-trap\n\n    _this.updatePreviousElement();\n\n    return _this;\n  }\n  /**\n   * Gets the configured document.\n   * @returns {Document|undefined} Configured document, falling back to the main\n   *  document, if it exists. During SSR, `undefined` is returned since the\n   *  document doesn't exist.\n   */\n\n\n  _createClass(FocusTrap, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      // SSR: careful to check if `document` exists before accessing it as a variable\n      return this.props.focusTrapOptions.document || (typeof document !== 'undefined' ? document : undefined);\n    }\n    /**\n     * Gets the node for the given option, which is expected to be an option that\n     *  can be either a DOM node, a string that is a selector to get a node, `false`\n     *  (if a node is explicitly NOT given), or a function that returns any of these\n     *  values.\n     * @param {string} optionName\n     * @returns {undefined | false | HTMLElement | SVGElement} Returns\n     *  `undefined` if the option is not specified; `false` if the option\n     *  resolved to `false` (node explicitly not given); otherwise, the resolved\n     *  DOM node.\n     * @throws {Error} If the option is set, not `false`, and is not, or does not\n     *  resolve to a node.\n     */\n\n  }, {\n    key: \"getReturnFocusNode\",\n    value: function getReturnFocusNode() {\n      var node = this.getNodeForOption('setReturnFocus', this.previouslyFocusedElement);\n      return node ? node : node === false ? false : this.previouslyFocusedElement;\n    }\n    /** Update the previously focused element with the currently focused element. */\n\n  }, {\n    key: \"updatePreviousElement\",\n    value: function updatePreviousElement() {\n      var currentDocument = this.getDocument();\n\n      if (currentDocument) {\n        this.previouslyFocusedElement = currentDocument.activeElement;\n      }\n    }\n  }, {\n    key: \"deactivateTrap\",\n    value: function deactivateTrap() {\n      // NOTE: it's possible the focus trap has already been deactivated without our knowing it,\n      //  especially if the user set the `clickOutsideDeactivates: true` option on the trap,\n      //  and the mouse was clicked on some element outside the trap; at that point, focus-trap\n      //  will initiate its auto-deactivation process, which will call our own\n      //  handleDeactivate(), which will call into this method\n      if (!this.focusTrap || !this.focusTrap.active) {\n        return;\n      }\n\n      this.focusTrap.deactivate({\n        // NOTE: we never let the trap return the focus since we do that ourselves\n        returnFocus: false,\n        // we'll call this in our own post deactivate handler so make sure the trap doesn't\n        //  do it prematurely\n        checkCanReturnFocus: null,\n        // let it call the user's original deactivate handler, if any, instead of\n        //  our own which calls back into this function\n        onDeactivate: this.originalOptions.onDeactivate // NOTE: for post deactivate, don't specify anything so that it calls the\n        //  onPostDeactivate handler specified on `this.internalOptions`\n        //  which will always be our own `handlePostDeactivate()` handler, which\n        //  will finish things off by calling the user's provided onPostDeactivate\n        //  handler, if any, at the right time\n        // onPostDeactivate: NOTHING\n\n      });\n    }\n  }, {\n    key: \"handleClickOutsideDeactivates\",\n    value: function handleClickOutsideDeactivates(event) {\n      // use consumer's option (or call their handler) as the permission or denial\n      var allowDeactivation = typeof this.originalOptions.clickOutsideDeactivates === 'function' ? this.originalOptions.clickOutsideDeactivates.call(null, event) // call out of context\n      : this.originalOptions.clickOutsideDeactivates; // boolean\n\n      if (allowDeactivation) {\n        // capture the outside target that was clicked so we can use it in the deactivation\n        //  process since the consumer allowed it to cause auto-deactivation\n        this.outsideClick = {\n          target: event.target,\n          allowDeactivation: allowDeactivation\n        };\n      }\n\n      return allowDeactivation;\n    }\n  }, {\n    key: \"handleDeactivate\",\n    value: function handleDeactivate() {\n      if (this.originalOptions.onDeactivate) {\n        this.originalOptions.onDeactivate.call(null); // call user's handler out of context\n      }\n\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"handlePostDeactivate\",\n    value: function handlePostDeactivate() {\n      var _this2 = this;\n\n      var finishDeactivation = function finishDeactivation() {\n        var returnFocusNode = _this2.getReturnFocusNode();\n\n        var canReturnFocus = !!( // did the consumer allow it?\n        _this2.originalOptions.returnFocusOnDeactivate && // can we actually focus the node?\n        returnFocusNode !== null && returnFocusNode !== void 0 && returnFocusNode.focus && ( // was there an outside click that allowed deactivation?\n        !_this2.outsideClick || // did the consumer allow deactivation when the outside node was clicked?\n        _this2.outsideClick.allowDeactivation && // is the outside node NOT focusable (implying that it did NOT receive focus\n        //  as a result of the click-through) -- in which case do NOT restore focus\n        //  to `returnFocusNode` because focus should remain on the outside node\n        !isFocusable(_this2.outsideClick.target, _this2.internalOptions.tabbableOptions)) // if no, the restore focus to `returnFocusNode` at this point\n        );\n        var _this2$internalOption = _this2.internalOptions.preventScroll,\n            preventScroll = _this2$internalOption === void 0 ? false : _this2$internalOption;\n\n        if (canReturnFocus) {\n          // return focus to the element that had focus when the trap was activated\n          returnFocusNode.focus({\n            preventScroll: preventScroll\n          });\n        }\n\n        if (_this2.originalOptions.onPostDeactivate) {\n          _this2.originalOptions.onPostDeactivate.call(null); // don't call it in context of \"this\"\n\n        }\n\n        _this2.outsideClick = null; // reset: no longer needed\n      };\n\n      if (this.originalOptions.checkCanReturnFocus) {\n        this.originalOptions.checkCanReturnFocus.call(null, this.getReturnFocusNode()) // call out of context\n        .then(finishDeactivation, finishDeactivation);\n      } else {\n        finishDeactivation();\n      }\n    }\n  }, {\n    key: \"setupFocusTrap\",\n    value: function setupFocusTrap() {\n      if (!this.focusTrap) {\n        var focusTrapElementDOMNodes = this.focusTrapElements.map( // NOTE: `findDOMNode()` does not support CSS selectors; it'll just return\n        //  a new text node with the text wrapped in it instead of treating the\n        //  string as a selector and resolving it to a node in the DOM\n        ReactDOM.findDOMNode);\n        var nodesExist = focusTrapElementDOMNodes.some(Boolean);\n\n        if (nodesExist) {\n          // eslint-disable-next-line react/prop-types -- _createFocusTrap is an internal prop\n          this.focusTrap = this.props._createFocusTrap(focusTrapElementDOMNodes, this.internalOptions);\n\n          if (this.props.active) {\n            this.focusTrap.activate();\n          }\n\n          if (this.props.paused) {\n            this.focusTrap.pause();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.setupFocusTrap();\n      } // else, wait for later activation in case the `focusTrapOptions` will be updated\n      //  again before the trap is activated (e.g. if waiting to know what the document\n      //  object will be, so the Trap must be rendered, but the consumer is waiting to\n      //  activate until they have obtained the document from a ref)\n      //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.focusTrap) {\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrap.updateContainerElements(this.props.containerElements);\n        }\n\n        var hasActivated = !prevProps.active && this.props.active;\n        var hasDeactivated = prevProps.active && !this.props.active;\n        var hasPaused = !prevProps.paused && this.props.paused;\n        var hasUnpaused = prevProps.paused && !this.props.paused;\n\n        if (hasActivated) {\n          this.updatePreviousElement();\n          this.focusTrap.activate();\n        }\n\n        if (hasDeactivated) {\n          this.deactivateTrap();\n          return; // un/pause does nothing on an inactive trap\n        }\n\n        if (hasPaused) {\n          this.focusTrap.pause();\n        }\n\n        if (hasUnpaused) {\n          this.focusTrap.unpause();\n        }\n      } else {\n        // NOTE: if we're in `componentDidUpdate` and we don't have a trap yet,\n        //  it either means it shouldn't be active, or it should be but none of\n        //  of given `containerElements` were present in the DOM the last time\n        //  we tried to create the trap\n        if (prevProps.containerElements !== this.props.containerElements) {\n          this.focusTrapElements = this.props.containerElements;\n        } // don't create the trap unless it should be active in case the consumer\n        //  is still updating `focusTrapOptions`\n        //  @see https://github.com/focus-trap/focus-trap-react/issues/539\n\n\n        if (this.props.active) {\n          this.updatePreviousElement();\n          this.setupFocusTrap();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.deactivateTrap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var child = this.props.children ? React.Children.only(this.props.children) : undefined;\n\n      if (child) {\n        if (child.type && child.type === React.Fragment) {\n          throw new Error('A focus-trap cannot use a Fragment as its child container. Try replacing it with a <div> element.');\n        }\n\n        var composedRefCallback = function composedRefCallback(element) {\n          var containerElements = _this3.props.containerElements;\n\n          if (child) {\n            if (typeof child.ref === 'function') {\n              child.ref(element);\n            } else if (child.ref) {\n              child.ref.current = element;\n            }\n          }\n\n          _this3.focusTrapElements = containerElements ? containerElements : [element];\n        };\n\n        var childWithRef = React.cloneElement(child, {\n          ref: composedRefCallback\n        });\n        return childWithRef;\n      }\n\n      return null;\n    }\n  }]);\n\n  return FocusTrap;\n}(React.Component); // support server-side rendering where `Element` will not be defined\n\n\nvar ElementType = typeof Element === 'undefined' ? Function : Element;\nFocusTrap.propTypes = {\n  active: PropTypes.bool,\n  paused: PropTypes.bool,\n  focusTrapOptions: PropTypes.shape({\n    document: PropTypes.object,\n    onActivate: PropTypes.func,\n    onPostActivate: PropTypes.func,\n    checkCanFocusTrap: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onPostDeactivate: PropTypes.func,\n    checkCanReturnFocus: PropTypes.func,\n    initialFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    fallbackFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, // NOTE: does not support `false` as value (or return value from function)\n    PropTypes.func]),\n    escapeDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    clickOutsideDeactivates: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    returnFocusOnDeactivate: PropTypes.bool,\n    setReturnFocus: PropTypes.oneOfType([PropTypes.instanceOf(ElementType), PropTypes.string, PropTypes.bool, PropTypes.func]),\n    allowOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n    preventScroll: PropTypes.bool,\n    tabbableOptions: PropTypes.shape({\n      displayCheck: PropTypes.oneOf(['full', 'non-zero-area', 'none']),\n      getShadowRoot: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n    })\n  }),\n  containerElements: PropTypes.arrayOf(PropTypes.instanceOf(ElementType)),\n  children: PropTypes.oneOfType([PropTypes.element, // React element\n  PropTypes.instanceOf(ElementType) // DOM element\n  ]) // NOTE: _createFocusTrap is internal, for testing purposes only, so we don't\n  //  specify it here. It's expected to be set to the function returned from\n  //  require('focus-trap'), or one with a compatible interface.\n\n};\nFocusTrap.defaultProps = {\n  active: true,\n  paused: false,\n  focusTrapOptions: {},\n  _createFocusTrap: createFocusTrap\n};\nmodule.exports = FocusTrap;"],"names":["candidateSelectors","candidateSelector","NoElement","matches","getRootNode","element","getCandidates","el","includeContainer","filter","candidates","getCandidatesIteratively","elements","options","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","getTabindex","node","isScope","sortOrderedTabbables","a","b","isInput","isHiddenInput","isDetailsWithSummary","r","child","getCheckedRadio","nodes","form","i","isTabbableRadio","radioScope","queryRadios","name","radioSet","err","checked","isRadio","isNonTabbableRadio","isZeroArea","_node$getBoundingClie","width","height","isHidden","_ref","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","nodeRootHost","nodeIsAttached","originalNode","parentElement","rootNode","isDisabledFromFieldset","parentNode","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","tabIndex","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","acc","sortable","tabbable","focusable","isTabbable","focusableCandidateSelector","isFocusable","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","target","source","key","_defineProperty","obj","value","activeFocusTraps","trapQueue","trap","activeTrap","trapIndex","isSelectableInput","isEscapeEvent","isTabEvent","delay","fn","findIndex","arr","idx","valueOrHandler","_len","params","_key","getActualTarget","event","createFocusTrap","userOptions","doc","config","state","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","container","tabbableNodes","getNodeForOption","optionValue","_len2","_key2","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","focusableNodes","forward","nodeIdx","n","group","tryFocus","getReturnFocusNode","previousActiveElement","checkPointerDown","e","checkFocusIn","targetContained","checkTab","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref2","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref3","lastTabbableNode","_destinationGroupIndex","_destinationGroup","checkKey","checkClick","addListeners","removeListeners","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","returnFocus","finishDeactivation","containerElements","elementsAsArray","_typeof","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","o","p","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","_getPrototypeOf","result","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","React","require$$0","ReactDOM","require$$1","PropTypes","require$$2","_require","require$$3","_require2","require$$4","FocusTrap","_React$Component","_super","_this","_this$internalOptions","_this$getDocument","focusTrapOptions","currentDocument","allowDeactivation","_this2","returnFocusNode","canReturnFocus","_this2$internalOption","preventScroll","focusTrapElementDOMNodes","nodesExist","prevProps","hasActivated","hasDeactivated","hasPaused","hasUnpaused","_this3","composedRefCallback","childWithRef","ElementType","focusTrapReact"],"mappings":"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","x_google_ignoreList":[0,1,2]}