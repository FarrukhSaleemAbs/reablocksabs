{"version":3,"file":"useDrawer-397bebfd.js","sources":["../../src/layers/Drawer/variants.ts","../../src/layers/Drawer/DrawerHeader.tsx","../../src/layers/Drawer/Drawer.tsx","../../src/layers/Drawer/useDrawer.tsx"],"sourcesContent":["export const variants = {\n  start: {\n    initial: {\n      x: '-100%'\n    },\n    animate: {\n      x: '0%'\n    }\n  },\n  end: {\n    initial: {\n      x: '100%'\n    },\n    animate: {\n      x: '0%'\n    }\n  },\n  top: {\n    initial: {\n      y: '-100%'\n    },\n    animate: {\n      y: '0%'\n    }\n  },\n  bottom: {\n    initial: {\n      y: '100%'\n    },\n    animate: {\n      y: '0%'\n    }\n  }\n};\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport css from './Drawer.module.css';\n\nexport interface DrawerHeaderProps {\n  children?: any;\n  className?: string;\n  showCloseButton?: boolean;\n  onClose?: () => void;\n}\n\nexport const DrawerHeader: FC<Partial<DrawerHeaderProps>> = ({\n  children,\n  className,\n  showCloseButton,\n  onClose\n}) => (\n  <header className={classNames(css.header, className)}>\n    <div>\n      {typeof children === 'string' ? (\n        <h1 className={css.headerText}>{children}</h1>\n      ) : (\n        children\n      )}\n    </div>\n    {showCloseButton && (\n      <button type=\"button\" className={css.closeButton} onClick={onClose}>\n        ✕\n      </button>\n    )}\n  </header>\n);\n","import React, { FC, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport FocusTrap from 'focus-trap-react';\nimport { CloneElement, GlobalOverlay, GlobalOverlayProps, useId } from 'rdk';\nimport { motion } from 'framer-motion';\nimport { variants } from './variants';\nimport css from './Drawer.module.css';\nimport { DrawerHeader, DrawerHeaderProps } from './DrawerHeader';\n\nexport interface DrawerProps extends Omit<GlobalOverlayProps, 'children'> {\n  position?: 'start' | 'end' | 'top' | 'bottom';\n  size?: string | number;\n  className?: string;\n  contentClassName?: string;\n  backdropClassName?: string;\n  disablePadding?: boolean;\n  header?: any;\n  showCloseButton?: boolean;\n  children?: any;\n  headerElement: ReactElement<DrawerHeaderProps, typeof DrawerHeader> | null;\n}\n\nexport const Drawer: FC<Partial<DrawerProps>> = ({\n  className,\n  contentClassName,\n  headerElement,\n  children,\n  open,\n  backdropClassName,\n  header,\n  position,\n  size,\n  hasBackdrop,\n  closeOnEscape,\n  closeOnBackdropClick,\n  disablePadding,\n  showCloseButton,\n  onClose\n}) => {\n  const id = useId();\n  const variant = variants[position];\n\n  const style = {\n    width: position === 'start' || position === 'end' ? size : 'auto',\n    height: position === 'top' || position === 'bottom' ? size : 'auto'\n  };\n\n  return (\n    <GlobalOverlay\n      open={open}\n      hasBackdrop={hasBackdrop}\n      closeOnEscape={closeOnEscape}\n      closeOnBackdropClick={closeOnBackdropClick}\n      onClose={onClose}\n      backdropClassName={backdropClassName}\n    >\n      {({ overlayIndex }) => (\n        <FocusTrap\n          focusTrapOptions={{\n            clickOutsideDeactivates: true,\n            escapeDeactivates: true,\n            fallbackFocus: `#${id}`\n          }}\n        >\n          <div id={id} tabIndex={-1}>\n            <motion.div\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"initial\"\n              variants={variant}\n              transition={{\n                duration: 0.5,\n                ease: [0.04, 0.62, 0.23, 0.98],\n                when: 'beforeChildren'\n              }}\n              style={{ ...style, zIndex: overlayIndex }}\n              className={classNames(css.drawer, className, {\n                [css.left]: position === 'start',\n                [css.right]: position === 'end',\n                [css.top]: position === 'top',\n                [css.bottom]: position === 'bottom',\n                [css.disablePadding]: disablePadding\n              })}\n            >\n              {(header || headerElement) && (\n                <CloneElement<DrawerHeaderProps>\n                  element={headerElement}\n                  showCloseButton={showCloseButton}\n                  onClose={onClose}\n                >\n                  {header}\n                </CloneElement>\n              )}\n              {!header && !headerElement && showCloseButton && (\n                <button\n                  type=\"button\"\n                  className={classNames(\n                    css.closeButton,\n                    css.headerlessCloseButton\n                  )}\n                  onClick={onClose}\n                >\n                  ✕\n                </button>\n              )}\n              <div className={classNames(css.content, contentClassName)}>\n                {typeof children === 'function' ? children() : children}\n              </div>\n            </motion.div>\n          </div>\n        </FocusTrap>\n      )}\n    </GlobalOverlay>\n  );\n};\n\nDrawer.defaultProps = {\n  position: 'end',\n  size: '80%',\n  hasBackdrop: true,\n  closeOnEscape: true,\n  closeOnBackdropClick: true,\n  disablePadding: false,\n  showCloseButton: true,\n  headerElement: <DrawerHeader />\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Drawer, DrawerProps } from './Drawer';\n\ntype DrawerOptions =\n  | {\n      open?: boolean;\n      onClose?: () => void;\n    }\n  | undefined;\n\nexport const useDrawer = (prop?: DrawerOptions) => {\n  const { open, onClose } = prop || {};\n  const [internalOpen, setInternalOpen] = useState<boolean>(open);\n\n  useEffect(() => {\n    setInternalOpen(open);\n  }, [open]);\n\n  const onCloseInternal = useCallback(() => {\n    setInternalOpen(false);\n    onClose?.();\n  }, [onClose]);\n\n  const onToggleOpen = () => {\n    setInternalOpen(!internalOpen);\n  };\n\n  const Component = useCallback(\n    (props: Partial<DrawerProps>) => (\n      <Drawer {...props} open={internalOpen} onClose={onCloseInternal} />\n    ),\n    [internalOpen, onCloseInternal]\n  );\n\n  return {\n    isOpen: internalOpen,\n    setOpen: setInternalOpen,\n    toggleOpen: onToggleOpen,\n    Drawer: Component\n  };\n};\n"],"names":["variants","DrawerHeader","children","className","showCloseButton","onClose","jsxs","classNames","css","jsx","Drawer","contentClassName","headerElement","open","backdropClassName","header","position","size","hasBackdrop","closeOnEscape","closeOnBackdropClick","disablePadding","id","useId","variant","style","GlobalOverlay","overlayIndex","FocusTrap","motion","CloneElement","useDrawer","prop","internalOpen","setInternalOpen","useState","useEffect","onCloseInternal","useCallback","onToggleOpen","Component","props"],"mappings":"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"}